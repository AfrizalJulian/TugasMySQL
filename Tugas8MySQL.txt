// Masuk ke ruang database menggunakan perintah command promt
mysql -u root

// Masuk ke dalam dbpos
MariaDB [(none)]> use dbpos;

// Worksheet 6 Stored Procedures, Stored Functions dan Trigger

// SOAL 6.1

// Stored Procedures dan Stored Functions

// 1. Buatlah Procedure untuk mengupdate harga_jual berdasarkan jenis produk tertentu (jenis_produk_id), beri nama procedure pro_naikan_harga memiliki parameter yang akan menerima argumen: Jenis Produk ID dan Persentase kenaikan harga.
MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE PROCEDURE pro_naik(
    -> in jenis_produk int,
    -> in persentasi_kenaikan int)
    -> BEGIN
    -> UPDATE produk set harga_jual = harga_jual + (harga_jual * persentasi_kenaikan /100)
    -> WHERE jenis_produk_id = jenis_produk;
    -> END $$
Query OK, 0 rows affected (0.234 sec)

MariaDB [dbpos]> DELIMITER ;
MariaDB [dbpos]> SELECT nama,harga_jual,jenis_produk_id from produk;
+--------------------+------------+-----------------+
| nama               | harga_jual | jenis_produk_id |
+--------------------+------------+-----------------+
| Kipas Angin Cosmis |     400000 |               1 |
| Redmi 9C           |    3000000 |               2 |
| ASUS ROG           |   95000000 |               3 |
| Nabati             |       2500 |               4 |
| Bakso              |      16000 |               5 |
| Meja               |     400000 |               6 |
| TupperWare         |      55000 |               7 |
| Tempat Pensil      |      15000 |               8 |
| Pecel Lele         |      25000 |               9 |
| Teh Sisri          |       4000 |              10 |
| Pop Ice            |      11000 |              11 |
| Setrika            |     200000 |              12 |
| Pulpen Faster      |       5000 |              13 |
| Sprite             |       7500 |              14 |
+--------------------+------------+-----------------+

MariaDB [dbpos]> CALL pro_naik(5, 4);
Query OK, 1 row affected (0.194 sec)

MariaDB [dbpos]> SELECT nama,harga_jual,jenis_produk_id from produk;
+--------------------+------------+-----------------+
| nama               | harga_jual | jenis_produk_id |
+--------------------+------------+-----------------+
| Kipas Angin Cosmis |     400000 |               1 |
| Redmi 9C           |    3000000 |               2 |
| ASUS ROG           |   95000000 |               3 |
| Nabati             |       2500 |               4 |
| Bakso              |      16640 |               5 |
| Meja               |     400000 |               6 |
| TupperWare         |      55000 |               7 |
| Tempat Pensil      |      15000 |               8 |
| Pecel Lele         |      25000 |               9 |
| Teh Sisri          |       4000 |              10 |
| Pop Ice            |      11000 |              11 |
| Setrika            |     200000 |              12 |
| Pulpen Faster      |       5000 |              13 |
| Sprite             |       7500 |              14 |
+--------------------+------------+-----------------+

// 2. Buat fungsi umur dengan parameter yang menerima inputan argumen tipe data date dan mengembalikan hasil perhitungan umur (tahun sekarang dikurang tahun inputan) dengan tipe data bilangan bulat (integer) positif.
MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE FUNCTION umur(tgl_lahir DATE)
    -> RETURNS INT
    -> BEGIN
    -> DECLARE umur INT;
    -> SET umur = year(CURDATE()) - YEAR(tgl_lahir);
    -> RETURN umur;
    -> END $$
Query OK, 0 rows affected (0.219 sec)

MariaDB [dbpos]> DELIMITER ;
MariaDB [dbpos]> SELECT kode, nama, jk, umur(tgl_lahir) AS umur FROM pelanggan;
+-------+--------+------+------+
| kode  | nama   | jk   | umur |
+-------+--------+------+------+
| K001  | Dzul   | L    |   21 |
| K002  | Welly  | L    |   22 |
| K003  | Putri  | P    |   22 |
| K004  | Kevin  | L    |   21 |
| K005  | Julian | L    |   19 |
| K006  | Bowo   | L    |   23 |
| K007  | Surya  | L    |   20 |
| K008  | Anita  | P    |   19 |
| K009  | Zahra  | P    |   20 |
| K0010 | Thorik | L    |   23 |
| K0011 | Albert | L    |   19 |
+-------+--------+------+------+

// 3. Buat fungsi kategori_harga dengan parameter yang menerima inputan argument tipe data double dan mengembalikan tipe data string kategori harga berdasarkan: 
      ●	0 – 500rb : murah
      ●	500rb – 3 juta : sedang
      ●	3jt – 10 juta : mahal 
      ●	> 10 juta : sangat mahal

MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE FUNCTION kategori_harga(harga DOUBLE) RETURNS VARCHAR(20)
    -> BEGIN
    -> DECLARE kategori VARCHAR(20);
    -> IF harga <= 500000 THEN
    -> SET kategori = 'murah';
    -> ELSEIF harga > 500000 AND harga <= 3000000 THEN
    -> SET kategori = 'sedang';
    -> ELSEIF harga > 3000000 AND harga <= 10000000 THEN
    -> SET kategori = 'mahal';
    -> ELSE
    -> SET kategori = 'sangat mahal';
    -> END IF;
    -> RETURN kategori;
    -> END $$
Query OK, 0 rows affected (0.196 sec)

// ● 0 – 500rb : murah
MariaDB [dbpos]> DELIMITER ;
MariaDB [dbpos]> SELECT kategori_harga(400000);
+------------------------+
| kategori_harga(400000) |
+------------------------+
| murah                  |
+------------------------+

// ● 500rb – 3 juta : sedang
MariaDB [dbpos]> SELECT kategori_harga(3000000);
+-------------------------+
| kategori_harga(3000000) |
+-------------------------+
| sedang                  |
+-------------------------+

// ● 3jt – 10 juta : mahal
MariaDB [dbpos]> SELECT kategori_harga(8000000);
+-------------------------+
| kategori_harga(8000000) |
+-------------------------+
| mahal                   |
+-------------------------+

// ● > 10 juta : sangat mahal
MariaDB [dbpos]> SELECT kategori_harga(95000000);
+--------------------------+
| kategori_harga(95000000) |
+--------------------------+
| sangat mahal             |
+--------------------------+


// SOAL 6.2

// Trigger

// 1. Buatlah bisnis proses pembayaran dengan menggunakan trigers, dengan skenario sebagai berikut :
  - pelanggan memesan didalam table pesanan 
  - dilanjutkan dengan proses pembayaran di table pembayaran
  - didalam table pembayaran tambahkan kolom status_pembayaran
  - jika pesanan sudah dibayar maka status pembayaran akan berubah menjadi lunas 


// - pelanggan memesan didalam table pesanan
MariaDB [dbpos]> select * from pesanan;
+----+------------+-----------+--------------+
| id | tanggal    | total     | pelanggan_id |
+----+------------+-----------+--------------+
|  1 | 2023-10-01 |    800000 |            1 |
|  2 | 2023-10-02 |   5000000 |            2 |
|  3 | 2023-10-03 | 110000000 |            3 |
|  4 | 2023-10-04 |     17500 |            4 |
|  5 | 2023-10-05 |    480000 |            5 |
|  6 | 2023-10-06 |   3200000 |            6 |
|  7 | 2023-10-07 |    550000 |            7 |
|  8 | 2023-10-08 |    135000 |            8 |
|  9 | 2023-10-09 |    500000 |            9 |
| 10 | 2023-10-10 |     48000 |           10 |
| 11 | 2023-10-11 |    330000 |           11 |
+----+------------+-----------+--------------+

// - Didalam table pembayaran tambahkan kolom status_pembayaran
// ALTER TABLE pembayaran ADD status_pembayaran varchar(25);
MariaDB [dbpos]> ALTER TABLE pembayaran ADD status_pembayaran varchar(25);
Query OK, 0 rows affected (0.339 sec)


// - dilanjutkan dengan proses pembayaran di table pembayaran
MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE TRIGGER cek_pembayaran BEFORE INSERT ON pembayaran
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE total_bayar DECIMAL(10, 2);
    -> DECLARE total_pesanan DECIMAL(10,2);
    -> SELECT SUM(jumlah) INTO total_bayar FROM pembayaran WHERE pesanan_id = NEW.pesanan_id;
    -> SELECT total INTO total_pesanan FROM pesanan WHERE id = NEW.pesanan_id;
    -> IF total_bayar + NEW.jumlah >= total_pesanan THEN
    -> SET NEW.status_pembayaran = 'Lunas';
    -> END IF;
    -> END $$
Query OK, 0 rows affected (0.202 sec)


// Menambahkan data pada tabel pembayaran
MariaDB [dbpos]> INSERT INTO pembayaran (nokuitansi, tanggal, jumlah, ke, pesanan_id, status_pembayaran) VALUES
    -> ('KWI002','2023-04-04', 200000, 2, 2, '');
Query OK, 1 row affected (0.097 sec)

// - jika pesanan sudah dibayar maka status pembayaran akan berubah menjadi lunas
MariaDB [dbpos]> select * from pembayaran;
+----+------------+------------+-----------+------+------------+-------------------+
| id | nokuitansi | tanggal    | jumlah    | ke   | pesanan_id | status_pembayaran |
+----+------------+------------+-----------+------+------------+-------------------+
|  1 | 411        | 2023-10-18 |    800000 |    1 |          1 | NULL              |
|  2 | 412        | 2023-10-19 |   5000000 |    2 |          2 | NULL              |
|  3 | 413        | 2023-10-20 | 110000000 |    3 |          3 | NULL              |
|  4 | 414        | 2023-10-21 |     17500 |    4 |          4 | NULL              |
|  5 | 415        | 2023-10-22 |    480000 |    5 |          5 | NULL              |
|  6 | 416        | 2023-10-23 |   3200000 |    6 |          6 | NULL              |
|  7 | 417        | 2023-10-24 |    550000 |    7 |          7 | NULL              |
|  8 | 418        | 2023-10-25 |    135000 |    8 |          8 | NULL              |
|  9 | 419        | 2023-10-26 |    500000 |    9 |          9 | NULL              |
| 10 | 420        | 2023-10-27 |     48000 |   10 |         10 | NULL              |
| 11 | 421        | 2023-10-28 |    330000 |   11 |         11 | NULL              |
| 12 | KWI002     | 2023-04-04 |    200000 |    2 |          2 | Lunas             |
+----+------------+------------+-----------+------+------------+-------------------+

// 2. Buatlah Stored Procedure dengan nama kurangi_stok untuk mengurangi stok produk. Stok berkurang sesuai dengan jumlah pesanan produk.
MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE PROCEDURE kurangi_stok(IN produk_id INT, IN jumlah_pesanan INT)
    -> BEGIN
    -> DECLARE stok_produk INT;
    -> SELECT stok INTO stok_produk FROM produk WHERE id = produk_id;
    -> SET stok_produk = stok_produk - jumlah_pesanan;
    -> IF stok_produk < 0 THEN
    -> SET stok_produk = 0;
    -> END IF;
    -> UPDATE produk SET stok = stok_produk WHERE id = produk_id;
    -> END $$
Query OK, 0 rows affected (0.169 sec)


MariaDB [dbpos]> call kurangi_stok(11, 2);
Query OK, 2 rows affected (0.103 sec)

MariaDB [dbpos]> select * from produk;
+----+------+--------------------+------------+------------+------+----------+-----------------+
| id | kode | nama               | harga_beli | harga_jual | stok | min_stok | jenis_produk_id |
+----+------+--------------------+------------+------------+------+----------+-----------------+
|  1 | KA   | Kipas Angin Cosmis |     250000 |     400000 |    3 |        5 |               1 |
|  2 | HP   | Redmi 9C           |    2000000 |    3000000 |    2 |        4 |               2 |
|  3 | LP   | ASUS ROG           |   85000000 |   95000000 |    1 |        3 |               3 |
|  4 | NB   | Nabati             |       2000 |       2500 |    7 |       10 |               4 |
|  5 | BO   | Bakso              |      10000 |      16640 |   30 |      100 |               5 |
|  6 | MA   | Meja               |     200000 |     400000 |    8 |       10 |               6 |
|  7 | TW   | TupperWare         |      40000 |      55000 |   10 |       20 |               7 |
|  8 | TP   | Tempat Pensil      |      10000 |      15000 |    9 |       15 |               8 |
|  9 | PL   | Pecel Lele         |      20000 |      25000 |   20 |       35 |               9 |
| 10 | TS   | Teh Sisri          |       2000 |       4160 |   12 |       24 |              10 |
| 11 | PI   | Pop Ice            |       5000 |      11000 |   28 |       25 |              11 |
| 12 | SA   | Setrika            |     100000 |     200000 |   20 |       15 |              12 |
| 13 | PN   | Pulpen Faster      |       3500 |       5000 |   30 |       15 |              13 |
| 14 | SE   | Sprite             |       5000 |       7500 |   15 |        8 |              14 |
+----+------+--------------------+------------+------------+------+----------+-----------------+


// 3. Buatlah Trigger dengan nama trig_kurangi_stok yang akan mengurangi stok produk jika terjadi transaksi pesanan oleh pelanggan (memanggil stored procedure kurangi_stok soal no 2).
Trigger ini aktif setelah trigger after_pesanan_items_insert (trigger pada contoh 3).

MariaDB [dbpos]> DELIMITER $$
MariaDB [dbpos]> CREATE TRIGGER trig_kurangi_stok
    -> AFTER INSERT ON pesanan_items FOR EACH ROW
    -> BEGIN
    -> DECLARE produk_id INT;
    -> DECLARE jumlah_pesanan INT;
    -> SELECT NEW.produk_id, NEW.qty INTO produk_id, jumlah_pesanan;
    -> CALL kurangi_stok(produk_id, jumlah_pesanan);
    -> END $$
Query OK, 0 rows affected (0.146 sec)

MariaDB [dbpos]> DELIMITER ;
MariaDB [dbpos]> select * from produk;
+----+------+--------------------+------------+------------+------+----------+-----------------+
| id | kode | nama               | harga_beli | harga_jual | stok | min_stok | jenis_produk_id |
+----+------+--------------------+------------+------------+------+----------+-----------------+
|  1 | KA   | Kipas Angin Cosmis |     250000 |     400000 |    3 |        5 |               1 |
|  2 | HP   | Redmi 9C           |    2000000 |    3000000 |    2 |        4 |               2 |
|  3 | LP   | ASUS ROG           |   85000000 |   95000000 |    1 |        3 |               3 |
|  4 | NB   | Nabati             |       2000 |       2500 |    7 |       10 |               4 |
|  5 | BO   | Bakso              |      10000 |      16640 |   30 |      100 |               5 |
|  6 | MA   | Meja               |     200000 |     400000 |    8 |       10 |               6 |
|  7 | TW   | TupperWare         |      40000 |      55000 |   10 |       20 |               7 |
|  8 | TP   | Tempat Pensil      |      10000 |      15000 |    9 |       15 |               8 |
|  9 | PL   | Pecel Lele         |      20000 |      25000 |   20 |       35 |               9 |
| 10 | TS   | Teh Sisri          |       2000 |       4160 |   12 |       24 |              10 |
| 11 | PI   | Pop Ice            |       5000 |      11000 |   28 |       25 |              11 |
| 12 | SA   | Setrika            |     100000 |     200000 |   20 |       15 |              12 |
| 13 | PN   | Pulpen Faster      |       3500 |       5000 |   30 |       15 |              13 |
| 14 | SE   | Sprite             |       5000 |       7500 |   15 |        8 |              14 |
+----+------+--------------------+------------+------------+------+----------+-----------------+


MariaDB [dbpos]> select * from pesanan_items;
+-----+-----------+------------+------+----------+
| id  | produk_id | pesanan_id | qty  | harga    |
+-----+-----------+------------+------+----------+
| 401 |         1 |          1 |    5 |   400000 |
| 402 |         2 |          2 |    4 |  3000000 |
| 403 |         3 |          3 |    3 | 95000000 |
| 404 |         4 |          4 |   10 |     2500 |
| 405 |         5 |          5 |  100 |    16000 |
| 406 |         6 |          6 |   10 |   400000 |
| 407 |         7 |          7 |   20 |    55000 |
| 408 |         8 |          8 |   15 |    15000 |
| 409 |         9 |          9 |   35 |    25000 |
| 410 |        10 |         10 |   24 |     4000 |
| 411 |        11 |         11 |   25 |    11000 |
+-----+-----------+------------+------+----------+


MariaDB [dbpos]> INSERT INTO pesanan_items (produk_id, pesanan_id, qty, harga) VALUES
    -> (13, 13, 5, 25000);
Query OK, 1 row affected (0.102 sec)

MariaDB [dbpos]> select * from pesanan_items;
+-----+-----------+------------+------+----------+
| id  | produk_id | pesanan_id | qty  | harga    |
+-----+-----------+------------+------+----------+
| 401 |         1 |          1 |    5 |   400000 |
| 402 |         2 |          2 |    4 |  3000000 |
| 403 |         3 |          3 |    3 | 95000000 |
| 404 |         4 |          4 |   10 |     2500 |
| 405 |         5 |          5 |  100 |    16000 |
| 406 |         6 |          6 |   10 |   400000 |
| 407 |         7 |          7 |   20 |    55000 |
| 408 |         8 |          8 |   15 |    15000 |
| 409 |         9 |          9 |   35 |    25000 |
| 410 |        10 |         10 |   24 |     4000 |
| 411 |        11 |         11 |   25 |    11000 |
| 412 |        13 |         13 |    5 |    25000 |
+-----+-----------+------------+------+----------+

MariaDB [dbpos]> select * from produk;
+----+------+--------------------+------------+------------+------+----------+-----------------+
| id | kode | nama               | harga_beli | harga_jual | stok | min_stok | jenis_produk_id |
+----+------+--------------------+------------+------------+------+----------+-----------------+
|  1 | KA   | Kipas Angin Cosmis |     250000 |     400000 |    3 |        5 |               1 |
|  2 | HP   | Redmi 9C           |    2000000 |    3000000 |    2 |        4 |               2 |
|  3 | LP   | ASUS ROG           |   85000000 |   95000000 |    1 |        3 |               3 |
|  4 | NB   | Nabati             |       2000 |       2500 |    7 |       10 |               4 |
|  5 | BO   | Bakso              |      10000 |      16640 |   30 |      100 |               5 |
|  6 | MA   | Meja               |     200000 |     400000 |    8 |       10 |               6 |
|  7 | TW   | TupperWare         |      40000 |      55000 |   10 |       20 |               7 |
|  8 | TP   | Tempat Pensil      |      10000 |      15000 |    9 |       15 |               8 |
|  9 | PL   | Pecel Lele         |      20000 |      25000 |   20 |       35 |               9 |
| 10 | TS   | Teh Sisri          |       2000 |       4160 |   12 |       24 |              10 |
| 11 | PI   | Pop Ice            |       5000 |      11000 |   28 |       25 |              11 |
| 12 | SA   | Setrika            |     100000 |     200000 |   20 |       15 |              12 |
| 13 | PN   | Pulpen Faster      |       3500 |       5000 |   25 |       15 |              13 |
| 14 | SE   | Sprite             |       5000 |       7500 |   15 |        8 |              14 |
+----+------+--------------------+------------+------------+------+----------+-----------------+